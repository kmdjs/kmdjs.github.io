(function () {
    "use strict"; var n, t = function () { var n = function (n) { return Object.prototype.toString.call(n) === "[object Array]" }, f = function (t, i) { var u, e, f, r; if (n(t)) { for (u = 0, e = t.length; u < e; u++) if (r = i.length === 1 ? i(t[u]) : i(u, t[u]), r !== undefined) return r } else for (f in t) if (t.hasOwnProperty(f) && (r = i.length === 1 ? i(t[f]) : i(f, t[f]), r !== undefined)) return r }, e = function (i) { return n(i) ? i.length === 0 : !t.each(i, function () { return !0 }) }, r = function (t, i, r) { var e, u, h, o, s, f; if (n(t)) { for (e = new Array(t.length), u = 0, h = t.length; u < h; u++) e[u] = i(t[u]); return e } o = r ? i : null, r = r || i, s = {}; for (f in t) if (t.hasOwnProperty(f)) { var c = t[f], l = o ? o(f) : f, a = r ? r(c) : c; s[l] = a } return s }, o = function (n) { return r(n) }, i = function (n) { for (var i = 0, r = n.split("."), t = 0; t < 3; t++) i *= 100, t < r.length && (i += parseInt(r[t], 10)); return i }, s = function (n, t) { var f = n.substring(1), r = f.split("."), e, u; return r[r.length - 1] = "0", r[r.length - 2] = (parseInt(r[r.length - 2], 10) + 1).toString(), e = r.join("."), u = i(t), i(f) <= u && u < i(e) }, u = function (t, i) { var f, r; if (!n(i)) { for (f = new Array(arguments.length - 1), r = 1; r < arguments.length; r++) f[r - 1] = arguments[r]; return u(t, f) } return t.replace(/\{{1,2}\d+\}{1,2}/g, function (n) { var t, r, u; if (n.indexOf("{{") == 0 && n.indexOf("}}") == n.length - 2) return n.substring(1, n.length - 1); for (t = 0; n[t] == "{";) t++; for (r = n.length - 1; n[r] == "}";) r--; return u = parseInt(n.substring(t, r + 1), 10), n.replace("{" + u + "}", i[u]) }) }, h = function (n) { var t = !1; return function () { t || (n.apply(this, arguments), t = !0) } }; return { isArray: n, each: f, isEmpty: e, map: r, clone: o, v2n: i, testVersion: s, format: u, once: h } }(), i = { ALL: 0, TRACE: 1, DEBUG: 2, INFO: 3, WARN: 4, ERROR: 5, OFF: 100 }, u = function () { this.level = i.DEBUG }, h, e; u.prototype = {
        log: function (n, t) {
            if (this.level <= n) try {
                //console.log(t)
            } catch (i) { }
        }, trace: function (n) { this.log(i.TRACE, n) }, debug: function (n) { this.log(i.DEBUG, n) }, info: function (n) { this.log(i.INFO, n) }, warn: function (n) { this.log(i.WARN, n) }, error: function (n) { this.log(i.ERROR, n) }
    }; var c = function (n, t) { n.name = t.name, n.version = t.version, t.autoloads && (n.autoloads = t.autoloads), t.dependencies && (n.dependencies = t.dependencies) }, r = function (i) { var r = n.modules[i.name], u; r && r.version != i.version && n.logger.warn(t.format('The module "{0}" with version "{1}" has already been initialized, skip version "{2}".', i.name, r.version, i.version)), l(i), i.init(), u = {}, c(u, i), n.modules[i.name] = u }, l = function (i) { t.each(i.dependencies || [], function (i, r) { var u = n.modules[i]; if (!u) throw new Error(t.format('Missing required module: "{0}" (expected version: "{1}").', i, r)); if (!t.testVersion(r, u.version)) throw new Error(t.format('Version of module "{0}" mismatched, expected: "{1}", actual: "{2}".', i, r, u.version)); }) }, o = !!(typeof require == "function" && typeof module != "undefined" && module.exports), s = !!(typeof require == "function" && typeof define == "function" && define.amd), a = function (n) { var u = n.autoloads || [], i, f; o ? (i = n.require, t.each(u, function (n) { try { i("./wind-" + n) } catch (t) { i("wind-" + n) } }), r(n)) : s ? (f = t.map(u, function (n) { return "wind-" + n }), define("wind-" + n.name, f, function () { if (n.onerror) try { r(n) } catch (t) { n.onerror(t) } else r(n) })) : r(n) }, f = function () { n.logger = new u, n.Logging = { Logger: u, Level: i }, n._ = t, n.modules = { core: { name: "core", version: "0.7.0" } }, n.binders = {}, n.builders = {}, n.define = a }; if (o) n = module.exports, f(); else if (s) define("wind-core", function () { return n = {}, f(), n }); else { if (h = Function, e = h("return this")(), e.Wind) throw new Error("There's already a Wind root here, please load the component only once."); n = e.Wind = {}, f() }
})(), function () { "use strict"; function sprintf(n) { var t = arguments; return n.toString().replace(new RegExp("{\\d+}", "g"), function (n) { var i = parseInt(n.substring(1, n.length - 1), 10); return t[i + 1] }) } function trim(n) { return n.replace(/ +/g, "") } function getPrecedence(n) { var t = n[0]; switch (t) { case "dot": case "sub": case "call": return 1; case "unary-postfix": case "unary-prefix": return 2; case "var": case "binary": switch (n[1]) { case "*": case "/": case "%": return 3; case "+": case "-": return 4; case "<<": case ">>": case ">>>": return 5; case "<": case "<=": case ">": case ">=": case "instanceof": return 6; case "==": case "!=": case "===": case "!==": return 7; case "&": return 8; case "^": return 9; case "|": return 10; case "&&": return 11; case "||": return 12 } case "conditional": return 13; case "assign": return 14; case "new": return 15; case "seq": case "stat": case "name": case "object": case "array": case "num": case "regexp": case "string": case "function": case "defun": case "for": case "for-in": case "block": case "while": case "do": case "if": case "break": case "continue": case "return": case "throw": case "try": case "switch": return 0; default: return 100 } } function isWindPattern(n) { var u, t, i, r, f, e; return n[0] != "call" ? !1 : (u = n[1], u[0] != "name" || u[1] != "eval") ? !1 : (t = n[2][0], !t || t[0] != "call") ? !1 : (i = t[1], !i || i[0] != "dot" || i[2] != "compile") ? !1 : (r = i[1], !r || r[0] != "name" || r[1] != compile.rootName) ? !1 : (f = t[2][0], !f || f[0] != "string") ? !1 : (e = t[2][1], !e || e[0] != "function") ? !1 : !0 } function compileWindPattern(n, t, i, r) { var u = n[2][0][2][0][1], f = n[2][0][2][1], s = new WindTreeGenerator(u, t), h = s.generate(f), o, e; return r.write(u + " << "), o = new CodeGenerator(u, t, i, r), e = f[1] || "", o.generate(e, f[2], h), e } var parse = function () { function a(n) { return u.letter.test(n) } function f(n) { return n = n.charCodeAt(0), n >= 48 && n <= 57 } function ht(n) { return f(n) || a(n) } function ct(n) { return u.non_spacing_mark.test(n) || u.space_combining_mark.test(n) } function lt(n) { return u.connector_punctuation.test(n) } function v(n) { return n == "$" || n == "_" || a(n) } function y(n) { return v(n) || ct(n) || f(n) || lt(n) || n == "‌" || n == "‍" } function at(n) { return rt.test(n) ? parseInt(n.substr(2), 16) : ut.test(n) ? parseInt(n.substr(1), 8) : ft.test(n) ? parseFloat(n) : void 0 } function p(n, t, i, r) { this.message = n, this.line = t, this.col = i, this.pos = r; try { ({})() } catch (u) { this.stack = u.stack } } function w(n, t, i, r) { throw new p(n, t, i, r); } function b(n, t, i) { return n.type == t && (i == null || n.value == i) } function vt(n) { function o() { return i.text.charAt(i.pos) } function r(n) { var t = i.text.charAt(i.pos++); if (n && !t) throw e; return t == "\n" ? (i.newline_before = !0, ++i.line, i.col = 0) : ++i.col, t } function p(n, t) { var r = i.text.indexOf(n, i.pos); if (t && r == -1) throw e; return r } function lt() { i.tokline = i.line, i.tokcol = i.col, i.tokpos = i.pos } function u(n, r, u) { i.regex_allowed = n == "operator" && !t(k, r) || n == "keyword" && t(nt, r) || n == "punc" && t(ot, r); var f = { type: n, value: r, line: i.tokline, col: i.tokcol, pos: i.tokpos, nlb: i.newline_before }; return u || (f.comments_before = i.comments_before, i.comments_before = []), i.newline_before = !1, f } function vt() { while (t(et, o())) r() } function yt(n) { for (var i = "", t = o(), u = 0; t && n(t, u++) ;) i += r(), t = o(); return i } function h(n) { w(n, i.tokline, i.tokcol, i.tokpos) } function b(n) { var e = !1, t = !1, i = !1, o = n == ".", r = yt(function (r, u) { return r == "x" || r == "X" ? i ? !1 : i = !0 : !i && (r == "E" || r == "e") ? e ? !1 : e = t = !0 : r == "-" ? t || u == 0 && !n ? !0 : !1 : r == "+" ? t : (t = !1, r == ".") ? !o && !i ? o = !0 : !1 : ht(r) }), f; if (n && (r = n + r), f = at(r), isNaN(f)) h("Invalid syntax: " + r); else return u("num", f) } function d() { var n = r(!0); switch (n) { case "n": return "\n"; case "r": return "\r"; case "t": return "\t"; case "b": return "\b"; case "v": return "\v"; case "f": return "\f"; case "0": return "\0"; case "x": return String.fromCharCode(rt(2)); case "u": return String.fromCharCode(rt(4)); default: return n } } function rt(n) { for (var t = 0, i; n > 0; --n) i = parseInt(r(!0), 16), isNaN(i) && h("Invalid hex-character pattern in string"), t = t << 4 | i; return t } function pt() { return a("Unterminated string constant", function () { for (var i = r(), t = "", n; ;) { if (n = r(!0), n == "\\") n = d(); else if (n == i) break; t += n } return u("string", t) }) } function wt() { r(); var n = p("\n"), t; return n == -1 ? (t = i.text.substr(i.pos), i.pos = i.text.length) : (t = i.text.substring(i.pos, n), i.pos = n), u("comment1", t, !0) } function bt() { return r(), a("Unterminated multiline comment", function () { var t = p("*/", !0), n = i.text.substring(i.pos, t), r = u("comment2", n, !0); return i.pos = t + 2, i.line += n.split("\n").length - 1, i.newline_before = n.indexOf("\n") >= 0, /^@cc_on/i.test(n) && (s("WARNING: at line " + i.line), s('*** Found "conditional comment": ' + n), s("*** UglifyJS DISCARDS ALL COMMENTS.  This means your code might no longer work properly in Internet Explorer.")), r }) } function ut() { for (var t = !1, i = "", n; (n = o()) != null;) if (t) n != "u" && h("Expecting UnicodeEscapeSequence -- uXXXX"), n = d(), y(n) || h("Unicode char: " + n.charCodeAt(0) + " is not valid in identifier"), i += n, t = !1; else if (n == "\\") t = !0, r(); else if (y(n)) i += r(); else break; return i } function ft() { return a("Unterminated regular expression", function () { for (var f = !1, t = "", n, i = !1, e; n = r(!0) ;) if (f) t += "\\" + n, f = !1; else if (n == "[") i = !0, t += n; else if (n == "]" && i) i = !1, t += n; else if (n != "/" || i) n == "\\" ? f = !0 : t += n; else break; return e = ut(), u("regexp", [t, e]) }) } function ct(n) { function i(n) { if (!o()) return n; var u = n + o(); return t(l, u) ? (r(), i(u)) : n } return u("operator", i(n || r())) } function kt() { r(); var n = i.regex_allowed; switch (o()) { case "/": return i.comments_before.push(wt()), i.regex_allowed = n, c(); case "*": return i.comments_before.push(bt()), i.regex_allowed = n, c() } return i.regex_allowed ? ft() : ct("/") } function dt() { return r(), f(o()) ? b(".") : u("punc", ".") } function gt() { var n = ut(); return t(g, n) ? t(l, n) ? u("operator", n) : t(tt, n) ? u("atom", n) : u("keyword", n) : u("name", n) } function a(n, t) { try { return t() } catch (i) { if (i === e) h(n); else throw i; } } function c(n) { if (n) return ft(); vt(), lt(); var i = o(); if (!i) return u("eof"); if (f(i)) return b(); if (i == '"' || i == "'") return pt(); if (t(st, i)) return u("punc", r()); if (i == ".") return dt(); if (i == "/") return kt(); if (t(it, i)) return ct(); if (i == "\\" || v(i)) return gt(); h("Unexpected character '" + i + "'") } var i = { text: n.replace(/\r\n?|[\n\u2028\u2029]/g, "\n").replace(/^\uFEFF/, ""), pos: 0, tokpos: 0, line: 0, tokline: 0, col: 0, tokcol: 0, newline_before: !1, regex_allowed: !1, comments_before: [] }; return c.context = function (n) { return n && (i = n), i }, c } function h(n, t, i) { this.name = n, this.start = t, this.end = i } function kt(i, r, u) { function e(n, t) { return b(f.token, n, t) } function ci() { return f.peeked || (f.peeked = f.input()) } function s() { return f.prev = f.token, f.peeked ? (f.token = f.peeked, f.peeked = null) : f.token = f.input(), f.token } function ot() { return f.prev } function nt(n, t, i, r) { var u = f.input.context(); w(n, t != null ? t : u.tokline, i != null ? i : u.tokcol, r != null ? r : u.tokpos) } function at(n, t) { nt(t, n.line, n.col) } function y(n) { n == null && (n = f.token), at(n, "Unexpected token: " + n.type + " (" + n.value + ")") } function kt(n, t) { if (e(n, t)) return s(); at(f.token, "Unexpected token " + f.token.type + ", expected " + n) } function a(n) { return kt("punc", n) } function gt() { return !r && (f.token.nlb || e("eof") || e("punc", "}")) } function tt() { e("punc", ";") ? s() : gt() || y() } function l() { return c(arguments) } function it() { a("("); var n = v(); return a(")"), n } function ni(n, t, i) { return n instanceof h ? n : new h(n, t, i) } function ti() { e("operator", "/") && (f.peeked = null, f.token = f.input(!0)); switch (f.token.type) { case "num": case "string": case "regexp": case "operator": case "atom": return st(); case "name": return b(ci(), "punc", ":") ? li(n(f.token.value, s, s)) : st(); case "punc": switch (f.token.value) { case "{": return l("block", rt()); case "[": case "(": return st(); case ";": return s(), l("block"); default: y() } case "keyword": switch (n(f.token.value, s)) { case "break": return ii("break"); case "continue": return ii("continue"); case "debugger": return tt(), l("debugger"); case "do": return function (t) { return kt("keyword", "while"), l("do", n(it, tt), t) }(ut(p)); case "for": return ai(); case "function": return ft(!0); case "if": return pi(); case "return": return f.in_function == 0 && nt("'return' outside of function"), l("return", e("punc", ";") ? (s(), null) : gt() ? null : n(v, tt)); case "switch": return l("switch", it(), ui()); case "throw": return l("throw", n(v, tt)); case "try": return wi(); case "var": return n(ei, tt); case "const": return n(bi, tt); case "while": return l("while", it(), ut(p)); case "with": return l("with", it(), p()); default: y() } } } function li(n) { f.labels.push(n); var u = f.token, i = p(); return r && !t(wt, i[0]) && y(u), f.labels.pop(), l("label", n, i) } function st() { return l("stat", n(v, tt)) } function ii(n) { var t = e("name") ? f.token.value : null; return t != null ? (s(), dt(t, f.labels) || nt("Label " + t + " without matching loop or statement")) : f.in_loop == 0 && nt(n + " not inside a loop or switch"), tt(), l(n, t) } function ai() { a("("); var n = null; return !e("punc", ";") && (n = e("keyword", "var") ? (s(), ei(!0)) : v(!0, !0), e("operator", "in")) ? yi(n) : vi(n) } function vi(n) { var t, i; return a(";"), t = e("punc", ";") ? null : v(), a(";"), i = e("punc", ")") ? null : v(), a(")"), l("for", n, t, i, ut(p)) } function yi(n) { var i = n[0] == "var" ? l("name", n[1][0]) : n, t; return s(), t = v(), a(")"), l("for-in", n, i, t, ut(p)) } function ri(t) { var i = e("name") ? n(f.token.value, s) : null; return t && !i && y(), a("("), l(t ? "defun" : "function", i, function (n, t) { while (!e("punc", ")")) n ? n = !1 : a(","), e("name") || y(), t.push(f.token.value), s(); return s(), t }(!0, []), function () { var n, t; return ++f.in_function, n = f.in_loop, f.in_loop = 0, t = rt(), --f.in_function, f.in_loop = n, t }()) } function pi() { var t = it(), i = p(), n; return e("keyword", "else") && (s(), n = p()), l("if", t, i, n) } function rt() { a("{"); for (var n = []; !e("punc", "}") ;) e("eof") && y(), n.push(p()); return s(), n } function wi() { var r = rt(), n, t, i; return e("keyword", "catch") && (s(), a("("), e("name") || nt("Name expected"), i = f.token.value, s(), a(")"), n = [i, rt()]), e("keyword", "finally") && (s(), t = rt()), n || t || nt("Missing catch/finally blocks"), l("try", r, n, t) } function fi(n) { for (var t = [], i; ;) { if (e("name") || y(), i = f.token.value, s(), e("operator", "=") ? (s(), t.push([i, v(!1, n)])) : t.push([i]), !e("punc", ",")) break; s() } return t } function ei(n) { return l("var", fi(n)) } function bi() { return l("const", fi()) } function ki() { var t = et(!1), n; return e("punc", "(") ? (s(), n = ht(")")) : n = [], g(l("new", t, n), !0) } function et(i) { if (e("operator", "new")) return s(), ki(); if (e("operator") && t(yt, f.token.value)) return oi("unary-prefix", n(f.token.value, s), et(i)); if (e("punc")) { switch (f.token.value) { case "(": return s(), g(n(v, o(a, ")")), i); case "[": return s(), g(di(), i); case "{": return s(), g(gi(), i) } y() } if (e("keyword", "function")) return s(), g(ft(!1), i); if (t(bt, f.token.type)) { var r = f.token.type == "regexp" ? l("regexp", f.token.value[0], f.token.value[1]) : l(f.token.type, f.token.value); return g(n(r, s), i) } y() } function ht(n, t, i) { for (var u = !0, r = []; !e("punc", n) ;) { if (u ? u = !1 : a(","), t && e("punc", n)) break; e("punc", ",") && i ? r.push(["atom", "undefined"]) : r.push(v(!1)) } return s(), r } function di() { return l("array", ht("]", !r, !0)) } function gi() { for (var i = !0, t = [], u, n; !e("punc", "}") ;) { if (i ? i = !1 : a(","), !r && e("punc", "}")) break; u = f.token.type, n = nr(), u != "name" || n != "get" && n != "set" || e("punc", ":") ? (a(":"), t.push([n, v(!1)])) : t.push([ct(), ft(!1), n]) } return s(), l("object", t) } function nr() { switch (f.token.type) { case "num": case "string": return n(f.token.value, s) } return ct() } function ct() { switch (f.token.type) { case "name": case "operator": case "keyword": case "atom": return n(f.token.value, s); default: y() } } function g(i, r) { return e("punc", ".") ? (s(), g(l("dot", i, ct()), r)) : e("punc", "[") ? (s(), g(l("sub", i, n(v, o(a, "]"))), r)) : r && e("punc", "(") ? (s(), g(l("call", i, ht(")")), !0)) : r && e("operator") && t(k, f.token.value) ? n(o(oi, "unary-postfix", f.token.value, i), s) : i } function oi(n, t, i) { return t != "++" && t != "--" || si(i) || nt("Invalid use of " + t + " operator"), l(n, t, i) } function lt(n, t, i) { var r = e("operator") ? f.token.value : null, u, o; return (r && r == "in" && i && (r = null), u = r != null ? pt[r] : null, u != null && u > t) ? (s(), o = lt(et(!0), u, i), lt(l("binary", r, n, o), t, i)) : n } function tr(n) { return lt(et(!0), 0, n) } function ir(n) { var t = tr(n), i; return e("operator", "?") ? (s(), i = v(!1), a(":"), l("conditional", t, i, v(!1, n))) : t } function si(n) { if (!r) return !0; switch (n[0]) { case "dot": case "sub": case "new": case "call": return !0; case "name": return n[1] != "this" } } function hi(n) { var i = ir(n), r = f.token.value; if (e("operator") && t(d, r)) { if (si(i)) return s(), l("assign", d[r], i, hi(n)); nt("Invalid assignment") } return i } function v(n, t) { arguments.length == 0 && (n = !0); var i = hi(t); return n && e("punc", ",") ? (s(), l("seq", i, v(!0, t))) : i } function ut(n) { try { return ++f.in_loop, n() } finally { --f.in_loop } } var f = { input: typeof i == "string" ? vt(i, !0) : i, token: null, prev: null, peeked: null, in_function: 0, in_loop: 0, labels: [] }, p, ft, ui; return f.token = s(), p = u ? function () { var t = f.token, n = ti.apply(this, arguments); return n[0] = ni(n[0], t, ot()), n } : ti, ft = u ? function () { var t = ot(), n = ri.apply(this, arguments); return n[0] = ni(n[0], t, ot()), n } : ri, ui = o(ut, function () { a("{"); for (var t = [], n = null; !e("punc", "}") ;) e("eof") && y(), e("keyword", "case") ? (s(), n = [], t.push([v(), n]), a(":")) : e("keyword", "default") ? (s(), a(":"), n = [], t.push([null, n])) : (n || y(), n.push(p())); return s(), t }), l("toplevel", function (n) { while (!e("eof")) n.push(p()); return n }([])) } function o(n) { var t = c(arguments, 1); return function () { return n.apply(this, t.concat(c(arguments))) } } function n(n) { n instanceof Function && (n = n()); for (var t = 1, i = arguments.length; --i > 0; ++t) arguments[t](); return n } function i(n) { for (var i = {}, t = 0; t < n.length; ++t) i[n[t]] = !0; return i } function c(n, t) { return Array.prototype.slice.call(n, t == null ? 0 : t) } function r(n) { return n.split("") } function dt(n, t) { for (var i = t.length; --i >= 0;) if (t[i] === n) return !0; return !1 } function t(n, t) { return Object.prototype.hasOwnProperty.call(n, t) } var g = i(["break", "case", "catch", "const", "continue", "default", "delete", "do", "else", "finally", "for", "function", "if", "in", "instanceof", "new", "return", "switch", "throw", "try", "typeof", "var", "void", "while", "with"]), gt = i(["abstract", "boolean", "byte", "char", "class", "debugger", "double", "enum", "export", "extends", "final", "float", "goto", "implements", "import", "int", "interface", "long", "native", "package", "private", "protected", "public", "short", "static", "super", "synchronized", "throws", "transient", "volatile"]), nt = i(["return", "new", "delete", "throw", "else", "case"]), tt = i(["false", "null", "true", "undefined"]), it = i(r("+-*&%=<>!?|~^")), rt = /^0x[0-9a-f]+$/i, ut = /^0[0-7]+$/, ft = /^\d*\.?\d*(?:e[+-]?\d*(?:\d\.?|\.?\d)\d*)?$/i, l = i(["in", "instanceof", "typeof", "new", "void", "delete", "++", "--", "+", "-", "!", "~", "&", "|", "^", "*", "/", "%", ">>", "<<", ">>>", "<", ">", "<=", ">=", "==", "===", "!=", "!==", "?", "=", "+=", "-=", "/=", "*=", "%=", ">>=", "<<=", ">>>=", "|=", "^=", "&=", "&&", "||"]), et = i(r(" \n\r\t​")), ot = i(r("[{}(,.;:")), st = i(r("[]{}(),;:")), ni = i(r("gmsiy")), u = { letter: new RegExp("[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"), non_spacing_mark: new RegExp("[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065E\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0900-\\u0902\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0955\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFD-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]"), space_combining_mark: new RegExp("[\\u0903\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]"), connector_punctuation: new RegExp("[\\u005F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]") }, e, s; p.prototype.toString = function () { return this.message + " (line: " + this.line + ", col: " + this.col + ", pos: " + this.pos + ")\n\n" + this.stack }, e = {}; var yt = i(["typeof", "void", "delete", "--", "++", "!", "~", "-", "+"]), k = i(["--", "++"]), d = function (n, t, i) { while (i < n.length) t[n[i]] = n[i].substr(0, n[i].length - 1), i++; return t }(["+=", "-=", "/=", "*=", "%=", ">>=", "<<=", ">>>=", "|=", "^=", "&="], { "=": !0 }, 0), pt = function (n, t) { for (var f, r, i = 0, u = 1; i < n.length; ++i, ++u) for (f = n[i], r = 0; r < f.length; ++r) t[f[r]] = u; return t }([["||"], ["&&"], ["|"], ["^"], ["&"], ["==", "===", "!=", "!=="], ["<", ">", "<=", ">=", "in", "instanceof"], [">>", "<<", ">>>"], ["+", "-"], ["*", "/", "%"]], {}), wt = i(["for", "do", "while", "switch"]), bt = i(["atom", "num", "string", "regexp", "name"]); return h.prototype.toString = function () { return this.name }, s = function () { }, kt }(), Wind, codeGenerator = typeof eval("(function () {})") == "function" ? function (n) { return n } : function (n) { return "false || " + n }, stringify = typeof JSON != "undefined" && JSON.stringify ? function (n) { return JSON.stringify(n) } : function () { var n = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, t = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }; return function (i) { return n.lastIndex = 0, n.test(i) ? '"' + i.replace(n, function (n) { var i = t[n]; return typeof i == "s" ? i : "\\u" + ("0000" + n.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + i + '"' } }(), CodeWriter = function (n) { this._indent = n || "    ", this._indentLevel = 0, this.lines = [] }, SeedProvider, WindTreeGenerator, CodeGenerator, Fn, global; CodeWriter.prototype = { write: function (n) { if (n !== undefined) return this.lines.length == 0 && this.lines.push(""), this.lines[this.lines.length - 1] += n, this }, writeLine: function () { return this.write.apply(this, arguments), this.lines.push(""), this }, writeIndents: function () { for (var t = new Array(this._indentLevel), n = 0; n < this._indentLevel; n++) t[n] = this._indent; return this.write(t.join("")), this }, addIndentLevel: function (n) { return this._indentLevel += n, this } }, SeedProvider = function () { this._seeds = {} }, SeedProvider.prototype.next = function (n) { var t = this._seeds[n]; return t == undefined ? (this._seeds[n] = 0, 0) : (this._seeds[n] = ++t, t) }, WindTreeGenerator = function (n, t) { this._binder = Wind.binders[n], this._seedProvider = t }, WindTreeGenerator.prototype = { generate: function (n) { var r = n[2], i = n[3], t = { type: "delay", stmts: [] }; return this._visitStatements(i, t.stmts), t }, _getBindInfo: function (n) { var r = n[0], f, u, t, i; if (r == "stat") { if (t = n[1], t[0] == "call") { if (i = t[1], i[0] == "name" && i[1] == this._binder && t[2].length == 1) return { expression: t[2][0], argName: "", assignee: null } } else if (t[0] == "assign" && (f = t[2], t = t[3], t[0] == "call" && (i = t[1], i[0] == "name" && i[1] == this._binder && t[2].length == 1))) return { expression: t[2][0], argName: "_result_$", assignee: f } } else if (r == "var") { if (u = n[1], u.length == 1) { var e = u[0], o = e[0], t = e[1]; if (t && t[0] == "call" && (i = t[1], i[0] == "name" && i[1] == this._binder && t[2].length == 1)) return { expression: t[2][0], argName: o, assignee: null } } } else if (r == "return" && (t = n[1], t && t[0] == "call" && (i = t[1], i[0] == "name" && i[1] == this._binder && t[2].length == 1))) return { expression: t[2][0], argName: "_result_$", assignee: "return" }; return null }, _visitStatements: function (n, t, i) { var u, e, o, r, f, h, s; return (arguments.length <= 2 && (i = 0), i >= n.length) ? (t.push({ type: "normal" }), this) : (u = n[i], e = this._getBindInfo(u), e ? (o = { type: "bind", info: e }, t.push(o), e.assignee != "return" && (o.stmts = [], this._visitStatements(n, o.stmts, i + 1))) : (r = u[0], r == "return" || r == "break" || r == "continue" || r == "throw" ? t.push({ type: r, stmt: u }) : r == "if" || r == "try" || r == "for" || r == "do" || r == "while" || r == "switch" || r == "for-in" ? (f = this._visit(u), f.type == "raw" ? (t.push(f), this._visitStatements(n, t, i + 1)) : (h = i == n.length - 1, h ? t.push(f) : (s = { type: "combine", first: { type: "delay", stmts: [f] }, second: { type: "delay", stmts: [] } }, t.push(s), this._visitStatements(n, s.second.stmts, i + 1)))) : (t.push({ type: "raw", stmt: u }), this._visitStatements(n, t, i + 1))), this) }, _visit: function (n) { function r() { throw new Error('"' + t + '" is not currently supported.'); } var t = n[0], i = this._visitors[t]; if (i) return i.call(this, n); r() }, _visitBody: function (n, t) { n[0] == "block" ? this._visitStatements(n[1], t) : this._visitStatements([n], t) }, _noBinding: function (n) { switch (n[n.length - 1].type) { case "normal": case "return": case "break": case "throw": case "continue": return !0 } return !1 }, _collectCaseStatements: function (n, t) { for (var f = [], u, i, r = t; r < n.length; r++) for (u = n[r][1], i = 0; i < u.length; i++) { if (u[i][0] == "break") return f; f.push(u[i]) } return f }, _visitors: { "for": function (n) { var r = [], o = n[4], t, u, i, f, e; return (this._visitBody(o, r), this._noBinding(r)) ? { type: "raw", stmt: n } : (t = { type: "delay", stmts: [] }, u = n[1], u && t.stmts.push({ type: "raw", stmt: u }), i = { type: "for", bodyStmt: { type: "delay", stmts: r } }, t.stmts.push(i), f = n[2], f && (i.condition = f), e = n[3], e && (i.update = e), t) }, "for-in": function (n) { var f = n[4], i = [], t, r, u; return (this._visitBody(f, i), this._noBinding(i)) ? { type: "raw", stmt: n } : (t = { type: "for-in", bodyStmts: i, obj: n[3] }, r = n[2][1], n[1][0] == "var" ? t.argName = r : (u = "_forInKey_$" + this._seedProvider.next("forInKey"), t.argName = u, t.bodyStmts.unshift({ type: "raw", stmt: parse(r + " = " + u + ";")[1][0] })), t) }, "while": function (n) { var t = [], u = n[2], i, r; return (this._visitBody(u, t), this._noBinding(t)) ? { type: "raw", stmt: n } : (i = { type: "while", bodyStmt: { type: "delay", stmts: t } }, r = n[1], i.condition = r, i) }, "do": function (n) { var t = [], i = n[2]; return (this._visitBody(i, t), this._noBinding(t)) ? { type: "raw", stmt: n } : { type: "do", bodyStmt: { type: "delay", stmts: t }, condition: n[1] } }, "switch": function (n) { for (var r = !0, f = { type: "switch", item: n[1], caseStmts: [] }, u = n[2], i, e, t = 0; t < u.length; t++) i = { item: u[t][0], stmts: [] }, f.caseStmts.push(i), e = this._collectCaseStatements(u, t), this._visitStatements(e, i.stmts), r = r && this._noBinding(i.stmts); return r ? { type: "raw", stmt: n } : f }, "if": function (n) { for (var i = !0, r = { type: "if", conditionStmts: [] }, u = n, e, f, o, t; ;) if (e = u[1], f = { cond: e, stmts: [] }, r.conditionStmts.push(f), o = u[2], this._visitBody(o, f.stmts), i = i && this._noBinding(f.stmts), t = u[3], t && t[0] == "if") u = t; else break; return t = u[3], t && (r.elseStmts = [], this._visitBody(t, r.elseStmts), i = i && this._noBinding(r.elseStmts)), i ? { type: "raw", stmt: n } : r }, "try": function (n) { var r = [], o = n[1], e, f; this._visitStatements(o, r); var i = this._noBinding(r), t = { type: "try", bodyStmt: { type: "delay", stmts: r } }, u = n[2]; return u && (e = u[0], t.exVar = e, t.catchStmts = [], this._visitStatements(u[1], t.catchStmts), i = i && this._noBinding(t.catchStmts)), f = n[3], f && (t.finallyStmt = { type: "delay", stmts: [] }, this._visitStatements(f, t.finallyStmt.stmts), i = i && this._noBinding(t.finallyStmt.stmts)), i ? { type: "raw", stmt: n } : t } } }, CodeGenerator = function (n, t, i, r) { this._builderName = n, this._binder = Wind.binders[n], this._seedProvider = t, this._codeWriter = i, this._commentWriter = r }, CodeGenerator.prototype = { _code: function () { return this._codeWriter.write.apply(this._codeWriter, arguments), this }, _codeLine: function () { return this._codeWriter.writeLine.apply(this._codeWriter, arguments), this }, _codeIndents: function () { return this._codeWriter.writeIndents(), this }, _codeIndentLevel: function (n) { return this._codeWriter.addIndentLevel(n), this }, _comment: function () { return this._commentWriter.write.apply(this._commentWriter, arguments), this }, _commentLine: function () { return this._commentWriter.writeLine.apply(this._commentWriter, arguments), this }, _commentIndents: function () { return this._commentWriter.writeIndents(), this }, _commentIndentLevel: function (n) { return this._commentWriter.addIndentLevel(n), this }, _both: function () { return this._codeWriter.write.apply(this._codeWriter, arguments), this._commentWriter.write.apply(this._commentWriter, arguments), this }, _bothLine: function () { return this._codeWriter.writeLine.apply(this._codeWriter, arguments), this._commentWriter.writeLine.apply(this._commentWriter, arguments), this }, _bothIndents: function () { return this._codeWriter.writeIndents(), this._commentWriter.writeIndents(), this }, _bothIndentLevel: function (n) { return this._codeWriter.addIndentLevel(n), this._commentWriter.addIndentLevel(n), this }, _newLine: function () { return this._codeWriter.writeLine.apply(this._codeWriter, arguments), this._commentWriter.writeLine(), this }, generate: function (n, t, i) { this._normalMode = !1, this._builderVar = "_builder_$" + this._seedProvider.next("builderId"), this._codeLine("(function " + n + "(" + t.join(", ") + ") {")._commentLine("function (" + t.join(", ") + ") {"), this._bothIndentLevel(1), this._codeIndents()._newLine("var " + this._builderVar + " = " + compile.rootName + ".builders[" + stringify(this._builderName) + "];"), this._codeIndents()._newLine("return " + this._builderVar + ".Start(this,"), this._codeIndentLevel(1), this._pos = {}, this._bothIndents()._visitWind(i)._newLine(), this._codeIndentLevel(-1), this._codeIndents()._newLine(");"), this._bothIndentLevel(-1), this._bothIndents()._code("})")._comment("}") }, _visitWind: function (n) { return this._windVisitors[n.type].call(this, n), this }, _visitRaw: function (n) { var t = n[0], i = this._rawVisitors[t]; if (i) i.call(this, n); else throw new Error('"' + t + '" is not currently supported.'); return this }, _visitWindStatements: function (n) { for (var t, i = 0; i < n.length; i++) t = n[i], t.type == "raw" || t.type == "if" || t.type == "switch" ? this._bothIndents()._visitWind(t)._newLine() : t.type == "delay" ? this._visitWindStatements(t.stmts) : this._bothIndents()._code("return ")._visitWind(t)._newLine(";") }, _visitRawStatements: function (n) { for (var i, t = 0; t < n.length; t++) { i = n[t], this._bothIndents()._visitRaw(i)._bothLine(); switch (i[0]) { case "break": case "return": case "continue": case "throw": return } } }, _visitRawBody: function (n) { return n[0] == "block" ? this._visitRaw(n) : (this._bothLine(), this._bothIndentLevel(1), this._bothIndents()._visitRaw(n), this._bothIndentLevel(-1)), this }, _visitRawFunction: function (n) { var i = n[1] || "", r = n[2], u = n[3], t; this._bothLine("function " + i + "(" + r.join(", ") + ") {"), this._bothIndentLevel(1), t = this._pos.inFunction, this._pos.inFunction = !0, this._visitRawStatements(u), this._bothIndentLevel(-1), this._pos.inFunction = t, this._bothIndents()._both("}") }, _windVisitors: { delay: function (n) { if (n.stmts.length == 1) { var t = n.stmts[0]; switch (t.type) { case "delay": case "combine": case "normal": case "break": case "continue": case "for": case "for-in": case "while": case "do": case "try": this._visitWind(t); return; case "return": if (!t.stmt[1]) { this._visitWind(t); return } } } this._newLine(this._builderVar + ".Delay(function () {"), this._codeIndentLevel(1), this._visitWindStatements(n.stmts), this._codeIndentLevel(-1), this._codeIndents()._code("})") }, combine: function (n) { this._newLine(this._builderVar + ".Combine("), this._codeIndentLevel(1), this._bothIndents()._visitWind(n.first)._newLine(","), this._bothIndents()._visitWind(n.second)._newLine(), this._codeIndentLevel(-1), this._codeIndents()._code(")") }, "for": function (n) { n.condition ? (this._codeLine(this._builderVar + ".For(function () {")._commentLine("for ("), this._codeIndentLevel(1), this._bothIndents()._code("return ")._comment("; ")._visitRaw(n.condition)._newLine(";"), this._codeIndentLevel(-1), this._bothIndents()._code("}, ")) : this._code(this._builderVar + ".For(null, ")._comment("for (; "), n.update ? (this._newLine("function () {"), this._codeIndentLevel(1), this._bothIndents()._comment("; ")._visitRaw(n.update)._codeLine(";")._commentLine(") {"), this._codeIndentLevel(-1), this._codeIndents()._newLine("},")) : this._codeLine("null,")._commentLine("; ) {"), this._bothIndentLevel(1), this._bothIndents()._visitWind(n.bodyStmt)._newLine(), this._bothIndentLevel(-1), this._bothIndents()._code(")")._comment("}") }, "for-in": function (n) { this._code(this._builderVar + ".ForIn(")._comment("for (var " + n.argName + " in ")._visitRaw(n.obj)._codeLine(", function (" + n.argName + ") {")._commentLine(") {"), this._bothIndentLevel(1), this._visitWindStatements(n.bodyStmts), this._bothIndentLevel(-1), this._bothIndents()._code("})")._comment("}") }, "while": function (n) { this._newLine(this._builderVar + ".While(function () {"), this._codeIndentLevel(1), this._bothIndents()._code("return ")._comment("while (")._visitRaw(n.condition)._codeLine(";")._commentLine(") {"), this._codeIndentLevel(-1), this._codeIndents()._newLine("},"), this._bothIndentLevel(1), this._bothIndents()._visitWind(n.bodyStmt)._newLine(), this._bothIndentLevel(-1), this._bothIndents()._code(")")._comment("}") }, "do": function (n) { this._codeLine(this._builderVar + ".Do(")._commentLine("do {"), this._bothIndentLevel(1), this._bothIndents()._visitWind(n.bodyStmt)._newLine(","), this._commentIndentLevel(-1), this._codeIndents()._newLine("function () {"), this._codeIndentLevel(1), this._bothIndents()._code("return ")._comment("} while (")._visitRaw(n.condition)._codeLine(";")._commentLine(");"), this._codeIndentLevel(-1), this._codeIndents()._newLine("}"), this._codeIndentLevel(-1), this._codeIndents()._code(")") }, raw: function (n) { this._visitRaw(n.stmt, !0) }, bind: function (n) { var t = n.info, i = ""; t.assignee == "return" ? i = "return " : t.argName != "" && (i = "var " + t.argName + " = "), this._code(this._builderVar + ".Bind(")._comment(i + this._binder + "(")._visitRaw(t.expression)._comment(");")._newLine(", function (" + t.argName + ") {"), this._codeIndentLevel(1), t.assignee == "return" ? this._codeIndents()._newLine("return " + this._builderVar + ".Return(" + t.argName + ");") : (t.assignee && this._bothIndents()._visitRaw(t.assignee)._bothLine(" = " + t.argName + ";"), this._visitWindStatements(n.stmts)), this._codeIndentLevel(-1), this._codeIndents()._code("})") }, "if": function (n) { for (var i, t = 0; t < n.conditionStmts.length; t++) i = n.conditionStmts[t], this._both("if (")._visitRaw(i.cond)._bothLine(") {"), this._bothIndentLevel(1), this._visitWindStatements(i.stmts), this._bothIndentLevel(-1), t < n.conditionStmts.length - 1 || n.elseStmts ? this._bothIndents()._both("} else ") : this._bothIndents()._code("} else ")._comment("}"); n.elseStmts ? (this._bothLine("{"), this._bothIndentLevel(1)) : (this._newLine("{"), this._codeIndentLevel(1)), n.elseStmts ? this._visitWindStatements(n.elseStmts) : this._codeIndents()._newLine("return " + this._builderVar + ".Normal();"), n.elseStmts ? this._bothIndentLevel(-1) : this._codeIndentLevel(-1), n.elseStmts ? this._bothIndents()._both("}") : this._codeIndents()._code("}") }, "switch": function (n) { var t, i; for (this._both("switch (")._visitRaw(n.item)._bothLine(") {"), this._bothIndentLevel(1), t = 0; t < n.caseStmts.length; t++) i = n.caseStmts[t], i.item ? this._bothIndents()._both("case ")._visitRaw(i.item)._bothLine(":") : this._bothIndents()._bothLine("default:"), this._bothIndentLevel(1), this._visitWindStatements(i.stmts), this._bothIndentLevel(-1); this._bothIndents()._code("}") }, "try": function (n) { this._codeLine(this._builderVar + ".Try(")._commentLine("try {"), this._bothIndentLevel(1), this._bothIndents()._visitWind(n.bodyStmt)._newLine(","), this._commentIndentLevel(-1), n.catchStmts ? (this._bothIndents()._codeLine("function (" + n.exVar + ") {")._commentLine("} catch (" + n.exVar + ") {"), this._bothIndentLevel(1), this._visitWindStatements(n.catchStmts), this._bothIndentLevel(-1), this._bothIndents()._codeLine("},"), n.finallyStmt ? this._commentLine("} finally {") : this._commentLine("}")) : this._bothIndents()._codeLine("null,")._commentLine("} finally {"), n.finallyStmt ? (this._commentIndentLevel(1), this._bothIndents()._visitWind(n.finallyStmt)._newLine(), this._commentIndentLevel(-1)) : this._codeIndents()._newLine("null"), this._codeIndentLevel(-1), this._codeIndents()._code(")"), n.finallyStmt && this._commentIndents()._comment("}") }, normal: function () { this._code(this._builderVar + ".Normal()") }, "throw": function (n) { this._code(this._builderVar + ".Throw(")._comment("throw ")._visitRaw(n.stmt[1])._code(")")._comment(";") }, "break": function () { this._code(this._builderVar + ".Break()")._comment("break;") }, "continue": function () { this._code(this._builderVar + ".Continue()")._comment("continue;") }, "return": function (n) { this._code(this._builderVar + ".Return(")._comment("return"), n.stmt[1] && this._comment(" ")._visitRaw(n.stmt[1]), this._code(")")._comment(";") } }, _rawVisitors: { "var": function (n) { var i, t; for (this._both("var "), i = n[1], t = 0; t < i.length; t++) this._both(i[t][0]), i[t].length > 1 && this._both(" = ")._visitRaw(i[t][1]), t < i.length - 1 && this._both(", "); this._both(";") }, seq: function (n, t) { var r = n[1], i = n[2]; t || this._both("("), this._visitRaw(r), this._both(", "), i[0] == "seq" ? arguments.callee.call(this, i, !0) : this._visitRaw(i), t || this._both(")") }, binary: function (n) { var r = n[1], t = n[2], i = n[3]; getPrecedence(n) < getPrecedence(t) ? this._both("(")._visitRaw(t)._both(") ") : this._visitRaw(t)._both(" "), this._both(r), getPrecedence(n) <= getPrecedence(i) ? this._both(" (")._visitRaw(i)._both(")") : this._both(" ")._visitRaw(i) }, sub: function (n) { var t = n[1], i = n[2]; getPrecedence(n) < getPrecedence(t) ? this._both("(")._visitRaw(t)._both(")[")._visitRaw(i)._both("]") : this._visitRaw(t)._both("[")._visitRaw(i)._both("]") }, "unary-postfix": function (n) { var i = n[1], t = n[2]; getPrecedence(n) <= getPrecedence(t) ? this._both("(")._visitRaw(t)._both(")") : this._visitRaw(t), this._both(" " + i) }, "unary-prefix": function (n) { var i = n[1], t = n[2]; this._both(i + " "), getPrecedence(n) < getPrecedence(t) ? this._both("(")._visitRaw(t)._both(")") : this._visitRaw(t) }, assign: function (n) { var i = n[1], t = n[2], r = n[3]; t[0] == "assign" ? this._both("(")._visitRaw(t)._both(")") : this._visitRaw(t), typeof i == "string" ? this._both(" " + i + "= ") : this._both(" = "), this._visitRaw(r) }, stat: function (n) { this._visitRaw(n[1])._both(";") }, dot: function (n) { var t = n[1], i = n[2]; getPrecedence(n) < getPrecedence(t) ? this._both("(")._visitRaw(t)._both(").")._both(i) : this._visitRaw(t)._both(".")._both(i) }, "new": function (n) { var u = n[1], i, t, r; for (this._both("new ")._visitRaw(u)._both("("), i = n[2], t = 0, r = i.length; t < r; t++) this._visitRaw(i[t]), t < r - 1 && this._both(", "); this._both(")") }, call: function (n) { var t, u, r, i; if (isWindPattern(n)) compileWindPattern(n, this._seedProvider, this._codeWriter, this._commentWriter); else { for (t = n[1], u = t[0] == "name" && t[1] == this._binder, getPrecedence(n) < getPrecedence(t) ? this._both("(")._visitRaw(t)._both(")") : this._visitRaw(t), this._both("("), r = n[2], i = 0; i < r.length; i++) this._visitRaw(r[i]), i < r.length - 1 && this._both(", "); this._both(")") } }, name: function (n) { this._both(n[1]) }, object: function (n) { var i = n[1], t; if (i.length <= 0) this._both("{ }"); else { for (this._bothLine("{"), this._bothIndentLevel(1), t = 0; t < i.length; t++) this._bothIndents()._both(stringify(i[t][0]) + ": ")._visitRaw(i[t][1]), t < i.length - 1 ? this._bothLine(",") : this._bothLine(""); this._bothIndentLevel(-1), this._bothIndents()._both("}") } }, array: function (n) { var i, t; for (this._both("["), i = n[1], t = 0; t < i.length; t++) this._visitRaw(i[t]), t < i.length - 1 && this._both(", "); this._both("]") }, num: function (n) { this._both(n[1]) }, regexp: function (n) { this._both("/" + n[1] + "/" + n[2]) }, string: function (n) { this._both(stringify(n[1])) }, "function": function (n) { this._visitRawFunction(n) }, defun: function (n) { this._visitRawFunction(n) }, "for": function (n) { var t, i, r, u, f; this._both("for ("), t = n[1], t ? (this._visitRaw(t), t[0] != "var" ? this._both("; ") : this._both(" ")) : this._both("; "), i = n[2], i && this._visitRaw(i), this._both("; "), r = n[3], r && this._visitRaw(r), this._both(") "), u = this._pos.inLoop, this._pos.inLoop = !0, f = n[4], this._visitRawBody(f), this._pos.inLoop = u }, "for-in": function (n) { var t, i, r; this._both("for ("), t = n[1], t[0] == "var" ? this._both("var " + t[1][0][0]) : this._visitRaw(t), this._both(" in ")._visitRaw(n[3])._both(") "), i = this._pos.inLoop, this._pos.inLoop = !0, r = n[4], this._visitRawBody(r), this._pos.inLoop = i }, block: function (n) { n.length > 1 ? (this._bothLine("{"), this._bothIndentLevel(1), this._visitRawStatements(n[1]), this._bothIndentLevel(-1), this._bothIndents()._both("}")) : this._both(";") }, "while": function (n) { var t = n[1], i = n[2], r = this._pos.inLoop; this._pos.inLoop = !0, this._both("while (")._visitRaw(t)._both(") ")._visitRawBody(i), this._pos.inLoop = r }, "do": function (n) { var i = n[1], t = n[2], r = this._pos.inLoop; this._pos.inLoop = !0, this._both("do ")._visitRawBody(t), this._pos.inLoop = r, t[0] == "block" ? this._both(" ") : this._bothLine()._bothIndents(), this._both("while (")._visitRaw(i)._both(");") }, "if": function (n) { var r = n[1], i = n[2], t; this._both("if (")._visitRaw(r)._both(") ")._visitRawBody(i), t = n[3], t && (i[0] == "block" ? this._both(" ") : this._bothLine("")._bothIndents(), t[0] == "if" ? this._both("else ")._visitRaw(t) : this._both("else ")._visitRawBody(t)) }, "break": function (n) { this._pos.inLoop || this._pos.inSwitch ? this._both("break;") : this._code("return ")._visitWind({ type: "break", stmt: n })._code(";") }, "continue": function (n) { this._pos.inLoop ? this._both("continue;") : this._code("return ")._visitWind({ type: "continue", stmt: n })._code(";") }, "return": function (n) { if (this._pos.inFunction) { this._both("return"); var t = n[1]; t && this._both(" ")._visitRaw(t), this._both(";") } else this._code("return ")._visitWind({ type: "return", stmt: n })._code(";") }, "throw": function (n) { var t = this._pos; t.inTry || t.inFunction ? this._both("throw ")._visitRaw(n[1])._both(";") : this._code("return ")._visitWind({ type: "throw", stmt: n })._code(";") }, conditional: function (n) { this._both("(")._visitRaw(n[1])._both(") ? (")._visitRaw(n[2])._both(") : (")._visitRaw(n[3])._both(")") }, "try": function (n) { var r, t, i; this._bothLine("try {"), this._bothIndentLevel(1), r = this._pos.inTry, this._pos.inTry = !0, this._visitRawStatements(n[1]), this._bothIndentLevel(-1), this._pos.inTry = r, t = n[2], i = n[3], t && (this._bothIndents()._bothLine("} catch (" + t[0] + ") {"), this._bothIndentLevel(1), this._visitRawStatements(t[1]), this._bothIndentLevel(-1)), i && (this._bothIndents()._bothLine("} finally {"), this._bothIndentLevel(1), this._visitRawStatements(i), this._bothIndentLevel(-1)), this._bothIndents()._both("}") }, "switch": function (n) { var u, r, t, i; for (this._both("switch (")._visitRaw(n[1])._bothLine(") {"), this._bothIndentLevel(1), u = this._pos.inSwitch, this._pos.inSwitch = !0, r = n[2], t = 0; t < r.length; t++) i = r[t], this._bothIndents(), i[0] ? this._both("case ")._visitRaw(i[0])._bothLine(":") : this._bothLine("default:"), this._bothIndentLevel(1), this._visitRawStatements(i[1]), this._bothIndentLevel(-1); this._bothIndentLevel(-1), this._pos.inSwitch = u, this._bothIndents()._both("}") } } }; var merge = function (n, t) { for (var e = n.length, f = 0, o, c, u, r, l, i = 0; i < e; i++) { var s = t[i].match(" +"), a = s ? s[0].length : 0, h = n[i].length - a + 10; h > f && (f = h) } for (o = new Array(f), i = 0; i < f; i++) o[i] = " "; for (c = o.join(""), u = [], i = 0; i < e; i++) r = n[i], r.replace(/ +/g, "").length > 0 && (r = "/* " + r + " */   "), l = c + t[i], u.push(r), u.push(l.substring(r.length)), i != e - 1 && u.push("\n"); return u.join("") }, sourceUrlSeed = 0, getOptions = function (n) { return n = n || {}, n.root = n.root || "Wind", n.noSourceUrl = n.noSourceUrl || !1, n }, compile = function (n, t, i) { i = getOptions(i); var u = t.toString(), o = "eval(" + compile.rootName + ".compile(" + stringify(n) + ", " + u + "))", s = parse(o), f = new CodeWriter, e = new CodeWriter, h = s[1][0][1], c = compileWindPattern(h, new SeedProvider, f, e), r = merge(e.lines, f.lines); return i.noSourceUrl || (r += "\n//@ sourceURL=wind/" + sourceUrlSeed++ + "_" + (c || "anonymous") + ".js"), Wind.logger.debug("// Original: \r\n" + u + "\r\n\r\n// Compiled: \r\n" + r + "\r\n"), codeGenerator(r) }; compile.rootName = "Wind"; var isCommonJS = !!(typeof require == "function" && typeof module != "undefined" && module.exports), isAmd = !!(typeof require == "function" && typeof define == "function" && define.amd), defineModule = function () { Wind.define({ name: "compiler", version: "0.7.2", require: isCommonJS && require, dependencies: { core: "~0.7.0" }, init: function () { Wind.parse = parse, Wind.compile = compile } }) }; if (isCommonJS) { try { Wind = require("./wind-core") } catch (ex) { Wind = require("wind-core") } defineModule() } else if (isAmd) require(["wind-core"], function (n) { Wind = n, defineModule() }); else { if (Fn = Function, global = Fn("return this")(), !global.Wind) throw new Error('Missing the root object, please load "wind" component first.'); Wind = global.Wind, defineModule() } }(), function () { "use strict"; var r = function () { }, f, i; r.prototype = { For: function (n, t, i) { return { next: function (r, u) { var f = function (e) { try { t && !e && t.call(r), !n || n.call(r) ? i.next(r, function (n, t) { if (n == "normal" || n == "continue") f(!1); else if (n == "throw" || n == "return") u(n, t); else if (n == "break") u("normal"); else throw new Error('Invalid type for "Loop": ' + n); }) : u("normal") } catch (o) { u("throw", o) } }; f(!0) } } }, ForIn: function (n, t) { return { next: function (i, r) { var u = [], e, f; for (e in n) u.push(e); f = function (n) { try { if (n < u.length) { var e = t(u[n]); e.next(i, function (t, i) { if (t == "normal" || t == "continue") f(n + 1); else if (t == "throw" || t == "return") r(t, i); else if (t == "break") r("normal"); else throw new Error('Invalid type for "Loop": ' + t); }) } else r("normal") } catch (o) { r("throw", o) } }, f(0) } } }, While: function (n, t) { return { next: function (i, r) { var u = function () { try { n.call(i) ? t.next(i, function (n, t) { if (n == "normal" || n == "continue") u(); else if (n == "throw" || n == "return") r(n, t); else if (n == "break") r("normal"); else throw new Error('Invalid type for "Loop": ' + n); }) : r("normal") } catch (f) { r("throw", f) } }; u() } } }, Do: function (n, t) { return { next: function (i, r) { var u = function () { n.next(i, function (n, f) { if (n == "normal" || n == "continue") try { t.call(i) ? u() : r("normal") } catch (e) { r("throw", e) } else if (n == "throw" || n == "return") r(n, f); else if (n == "break") r("normal"); else throw new Error('Invalid type for "Loop": ' + n); }) }; u() } } }, Delay: function (n) { return { next: function (t, i) { try { var r = n.call(t); r.next(t, i) } catch (u) { i("throw", u) } } } }, Combine: function (n, t) { return { next: function (i, r) { n.next(i, function (n, u, f) { if (n == "normal") try { t.next(i, r) } catch (e) { r("throw", e) } else r(n, u, f) }) } } }, Return: function (n) { return { next: function (t, i) { i("return", n) } } }, Normal: function () { return { next: function (n, t) { t("normal") } } }, Break: function () { return { next: function (n, t) { t("break") } } }, Continue: function () { return { next: function (n, t) { t("continue") } } }, Throw: function (n) { return { next: function (t, i) { i("throw", n) } } }, Try: function (n, t, i) { return { next: function (r, u) { n.next(r, function (n, f, e) { if (n == "throw" && t) if (t) { var o; try { o = t.call(r, f) } catch (s) { i ? i.next(r, function (n, t, i) { n == "normal" ? u("throw", s) : u(n, t, i) }) : u("throw", s) } o && o.next(r, function (n, t, f) { n == "throw" ? i ? i.next(r, function (i, r, e) { i == "normal" ? u(n, t, f) : u(i, r, e) }) : u(n, t, f) : i ? i.next(r, function (i, r, e) { i == "normal" ? u(n, t, f) : u(i, r, e) }) : u(n, t, f) }) } else i.next(r, function (t, i, r) { t == "normal" ? u(n, f, e) : u(t, i, r) }); else i ? i.next(r, function (t, i, r) { t == "normal" ? u(n, f, e) : u(t, i, r) }) : u(n, f, e) }) } } } }; var u = !!(typeof require == "function" && typeof module != "undefined" && module.exports), e = !!(typeof require == "function" && typeof define == "function" && define.amd), n, t = function () { n.define({ name: "builderbase", version: "0.7.0", require: u && require, dependencies: { core: "~0.7.0" }, init: function () { n.BuilderBase = r } }) }; if (u) { try { n = require("./wind-core") } catch (o) { n = require("wind-core") } t() } else if (e) require(["wind-core"], function (i) { n = i, t() }); else { if (f = Function, i = f("return this")(), !i.Wind) throw new Error('Missing the root object, please load "wind" component first.'); n = i.Wind, t() } }(), function () { "use strict"; var e = function () { var n = 0, i = function () { if (n === 0) throw new Error("Execute too soon."); return n }, t = {}; try { return Object.defineProperty(t, "value", { get: i }), n = 1, t.value === 1 } catch (r) { return !1 } }(), t, i, r = {}, p = "670a1076-712b-4edd-9b70-64b152fe1cd9", w = function (n) { return n._typeId == p }, u = r.CanceledError = function () { }, h, c, b, s, f, n, l, it, y; u.prototype = { isTypeOf: w, _typeId: p, message: "The task has been cancelled." }, h = "4a73efb8-c2e2-4305-a05c-72385288650a", c = r.AggregateError = function (n) { if (this.children = [], n) for (var t = 0; t < n.length; t++) this.children.push(n[t]) }, c.prototype = { _typeId: h, message: "This is an error contains sub-errors, please check the 'children' collection for more details.", isTypeOf: function (n) { return n._typeId == h } }, b = r.CancellationToken = function () { }, b.prototype = { register: function (n) { this.isCancellationRequested && n(), this._handlers || (this._handlers = []), this._handlers.push(n) }, unregister: function (n) { if (this._handlers) { var t = this._handlers.indexOf(n); t >= 0 && this._handlers.splice(t, 1) } }, cancel: function () { var i, n; if (!this.isCancellationRequested) for (this.isCancellationRequested = !0, i = this._handlers, delete this._handlers, n = 0; n < i.length; n++) try { i[n]() } catch (r) { t.logger.warn("Cancellation handler threw an error: " + r) } }, throwIfCancellationRequested: function () { if (this.isCancellationRequested) throw new u; } }, s = function () { this._listeners = {}, this._firing = null }, s.prototype = { add: function (n, t) { var r, i; if (this._firing === n) { r = this, setTimeout(function () { r.add(n, t) }, 0); return } i = this._listeners[n], i || (i = this._listeners[n] = []), i.push(t) }, remove: function (n, t) { var u, i, r; if (this._firing === n) { u = this, setTimeout(function () { u.remove(n, t) }, 0); return } (i = this._listeners[n], i) && (r = i.indexOf(t), r >= 0 && i.splice(r, 1)) }, fire: function (n, i, r) { var f = this._listeners[n], u; if (f) { for (this._firing = n, u = 0; u < f.length; u++) try { f[u].call(i, r) } catch (e) { t.logger.warn('An error occurred in "' + n + ' listener": ' + e) } this._firing = null } } }, f = new s, n = r.Task = function (n) { this._delegate = n, this._eventManager = new s, this.status = "ready" }, n.prototype = { start: function () { if (this.status != "ready") throw new Error('Task can only be started in "ready" status.'); this.status = "running"; try { this._delegate(this) } catch (n) { this.status == "running" ? this.complete("failure", n) : t.logger.warn("An unexpected error occurred after the task is completed: " + n) } return this }, complete: function (t, i) { var r, u; if (t !== "success" && t !== "failure") throw new Error("Unsupported type: " + t); if (this.status != "running") throw new Error('The "complete" method can only be called in "running" status.'); (r = this._eventManager, this._eventManager = null, t === "success" ? (this.status = "succeeded", e ? this._result = i : this.result = i, r.fire("success", this)) : (this.status = w(i) ? "canceled" : "faulted", e ? this._error = i : this.error = i, r.fire("failure", this)), r.fire("complete", this), t === "failure") && e && (this._errorObserved || (u = this, this._unobservedTimeoutToken = setTimeout(function () { u._handleUnobservedError(i) }, n.unobservedTimeout))) }, observeError: function () { if (this.status === "ready" || this.status === "running") throw new Error("The method could only be called when it's completed."); if (!e) return this.error; var n = this._unobservedTimeoutToken; return n && (clearTimeout(n), this._unobservedTimeoutToken = null), this._errorObserved = !0, this._error }, _handleUnobservedError: function (t) { this._unobservedTimeoutToken = null; var i = { task: this, error: t, observed: !1 }; if (f.fire("unobservedError", n, i), !i.observed) throw t; }, then: function (t) { var i = this; return n.create(function (n) { var r = function () { this.error ? n.complete("failure", this.error) : n.complete("success", this.result) }, f = function (n) { if (n.status == "ready" && n.start(), n.status == "running") n.on("complete", r); else r.call(n) }, u = function () { if (this.error) return n.complete("failure", this.error); var i; try { i = t(this.result) } catch (r) { return n.complete("failure", r) } f(i) }; if (i.status == "ready" && i.start(), i.status == "running") i.on("complete", u); else u.call(i) }) } }, n.prototype.on = n.prototype.addEventListener = function () { var n = this._eventManager; if (!n) throw new Error("Cannot add event listeners when the task is complete."); return n.add.apply(n, arguments), this }, n.prototype.off = n.prototype.removeEventListener = function () { var n = this._eventManager; if (!n) throw new Error("All the event listeners have been removed when the task was complete."); return n.remove.apply(n, arguments), this }, e && (Object.defineProperty(n.prototype, "error", { get: function () { return this.observeError() } }), Object.defineProperty(n.prototype, "result", { get: function () { var n = this.observeError(); if (n) throw n; return this._result } })), l = function () { this.observeError() }, n.on = n.addEventListener = function () { f.add.apply(f, arguments) }, n.off = n.removeEventListener = function () { f.remove.apply(f, arguments) }, n.unobservedTimeout = 1e4; var o = n.isTask = function (n) { return n && typeof n.start == "function" && typeof n.addEventListener == "function" && typeof n.removeEventListener == "function" && typeof n.complete == "function" }, k = n.create = function (t) { return new n(t) }, rt = n.whenAll = function () { var n, r, t; if (arguments.length == 1) r = arguments[0], n = o(r) ? [r] : r; else for (n = new Array(arguments.length), t = 0; t < arguments.length; t++) n[t] = arguments[t]; return k(function (t) { var r, f = function () { if (r) t.complete("failure", new c(r)); else { var u = i.map(n, function (n) { return n.result }); t.complete("success", u) } }, u = 0; i.each(n, function (t, i) { i && (o(i) || (n[t] = i = rt(i)), i.status === "ready" && i.start(), i.status === "running" ? (u++, i.addEventListener("complete", function () { this.status !== "succeeded" && (r || (r = []), r.push(this.error)), --u == 0 && f() })) : (i.status === "faulted" || i.status === "canceled") && (r || (r = []), r.push(i.error))) }), u == 0 && f() }) }, ft = n.whenAny = function () { var n = {}, e = !0, t, r, u, f; if (arguments.length == 1) t = arguments[0], o(t) ? n[0] = t : (e = i.isArray(t), i.each(t, function (t, i) { o(i) && (n[t] = i) })); else for (r = 0; r < arguments.length; r++) u = arguments[r], o(u) && (n[r] = u); return f = e ? function (n) { return parseInt(n, 10) } : function (n) { return n }, k(function (t) { var r, u; if (i.isEmpty(n)) return t.complete("failure", "There's no valid input tasks."); if (i.each(n, function (n, t) { t.status === "ready" && t.start(), t.status !== "running" && (t.observeError(), r || (r = { key: f(n), task: t })) }), r) return i.each(n, function (n, t) { if (t.status === "running") t.on("failure", l) }), t.complete("success", r); u = function () { this.observeError(); var e = this, r; i.each(n, function (n, t) { if (e === t) { r = n; return } t.off("complete", u); t.on("failure", l) }), t.complete("success", { key: f(r), task: this }) }, i.each(n, function (n) { n.addEventListener("complete", u) }) }) }, et = r.sleep = function (t, i) { return n.create(function (n) { var f, r; i && i.isCancellationRequested && n.complete("failure", new u), i && (f = function () { clearTimeout(r), n.complete("failure", new u) }), r = setTimeout(function () { i && i.unregister(f), n.complete("success") }, t), i && i.register(f) }) }, ot = r.onEvent = function (t, i, r) { return n.create(function (n) { var e, o, f; r && r.isCancellationRequested && n.complete("failure", new u), e = function () { t.removeEventListener ? t.removeEventListener(i, f) : t.removeListener ? t.removeListener(i, f) : t.detachEvent(i, f) }, r && (o = function () { e(), n.complete("failure", new u) }), f = function (t) { r && r.unregister(o), e(), n.complete("success", t) }, t.addEventListener ? t.addEventListener(i, f) : t.addListener ? t.addListener(i, f) : t.attachEvent(i, f), r && r.register(o) }) }, a = r.AsyncBuilder = function () { }; a.prototype = { Start: function (t, i) { return n.create(function (n) { i.next(t, function (t, i) { if (t == "normal" || t == "return") n.complete("success", i); else if (t == "throw") n.complete("failure", i); else throw new Error("Unsupported type: " + t); }) }) }, Bind: function (n, t) { return { next: function (i, r) { var u = function () { if (this.error) r("throw", this.error); else { var n; try { n = t.call(i, this.result) } catch (u) { r("throw", u); return } n.next(i, r) } }; n.status == "ready" ? (n.addEventListener("complete", u), n.start()) : n.status == "running" ? n.addEventListener("complete", u) : u.call(n) } } } }; var d = r.Binding = {}, g = function (n, t) { for (var i = [], r = 0; r < n.length; r++) i.push(n[r]); while (i.length < t) i.push(undefined); return i }, nt = function (n) { var i, t; if (n.length <= 1) return null; for (i = [], t = 1; t < n.length; t++) i.push(n[t]); return i }, st = d.fromStandard = function (t) { var i = nt(arguments); return function () { var u = this, r = g(arguments, t.length - 1); return n.create(function (n) { r.push(function (t, r) { var f, u; if (t) n.complete("failure", t); else { if (i) { for (f = {}, u = 0; u < i.length; u++) f[i[u]] = arguments[u + 1]; return n.complete("success", f) } n.complete("success", r) } }), t.apply(u, r) }) } }, ht = d.fromCallback = function (t) { var i = nt(arguments); return function () { var u = this, r = g(arguments, t.length - 1); return n.create(function (n) { r.push(function (t) { var u, r; if (i) { for (u = {}, r = 0; r < i.length; r++) u[i[r]] = arguments[r]; n.complete("success", u) } else n.complete("success", t) }), t.apply(u, r) }) } }, tt = !!(typeof require == "function" && typeof module != "undefined" && module.exports), ut = !!(typeof require == "function" && typeof define == "function" && define.amd), v = function () { t.define({ name: "async", version: "0.7.1", require: tt && require, autoloads: ["builderbase"], dependencies: { builderbase: "~0.7.0" }, init: function () { i = t._, i.each(t.BuilderBase.prototype, function (n, t) { a.prototype[n] = t }), t.Async = r, t.binders.async = "$await", t.builders.async = new a } }) }; if (tt) { try { t = require("./wind-core") } catch (ct) { t = require("wind-core") } v() } else if (ut) require(["wind-core"], function (n) { t = n, v() }); else { if (it = Function, y = it("return this")(), !y.Wind) throw new Error('Missing the root object, please load "wind" component first.'); t = y.Wind, v() } }(), function () { "use strict"; var n, e = function () { throw new Error('Please set "Wind.Promise.create" to provide a factory method for creating a promise object.'); }, t = function () { }, f, r; t.prototype = { Start: function (t, i) { return n.Promise.create(function (n, r) { i.next(t, function (t, i) { if (t == "normal" || t == "return") n(i); else if (t == "throw") r(i); else throw new Error("Unsupported type: " + t); }) }) }, Bind: function (n, t) { return { next: function (i, r) { n.then(function (n) { var u; try { u = t.call(i, n) } catch (f) { return r("throw", f) } u.next(i, r) }, function (n) { r("throw", n) }) } } } }; var u = !!(typeof require == "function" && typeof module != "undefined" && module.exports), o = !!(typeof require == "function" && typeof define == "function" && define.amd), i = function () { n.define({ name: "promise", version: "0.7.0", require: u && require, autoloads: ["builderbase"], dependencies: { builderbase: "~0.7.0" }, init: function () { n._.each(n.BuilderBase.prototype, function (n, i) { t.prototype[n] = i }), n.Promise || (n.Promise = {}), n.Promise.create = e, n.binders.promise = "$await", n.builders.promise = new t } }) }; if (u) { try { n = require("./wind-core") } catch (s) { n = require("wind-core") } i() } else if (o) require(["wind-core"], function (t) { n = t, i() }); else { if (f = Function, r = f("return this")(), !r.Wind) throw new Error('Missing the root object, please load "wind" component first.'); n = r.Wind, i() } }()